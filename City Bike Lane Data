With this database table, I use SQL to find insights into and make recommendations for the safety stats of the city bike share program.
I use a Window Function, subqueries, UNION, CASE aggregate functions and comparison operators.

/*Based on the safety ratings given by two auditors, make recommendations to the city
on which bike lanes should be removed, improved, and left as is.*/

WITH bike_lane_cte AS 
    (SELECT street, safetyrating, 
    AVG(safetyrating) OVER (PARTITION BY street) AS average_safety_rating
    FROM citybikelanes
    ORDER BY street)
SELECT street, safetyrating, average_safety_rating, 
    CASE 
    WHEN average_safety_rating >= 4 THEN 'Leave As-Is'
    WHEN average_safety_rating <=2.5 THEN 'Remove'
    ELSE 'Improvements Needed'
    END Recommendation
FROM bike_lane_cte
ORDER BY recommendation;

/*The city changed auditors in 2010 after they updated their lane specs, policies and proceedures for installing the bike lanes around the city. 
How does the average safety rating of the bike lanes installed before the changes in 2010 compare to those install after the changes?

SELECT AVG(safetyrating) AS "post 2010",
    (SELECT AVG(safetyrating)
FROM CityBikeLanes
WHERE year_installed < 2010) AS "pre 2010"
FROM CityBikeLanes
WHERE year_installed > 2011;

/*What relationships can you find in the bike lane safety data?*/

SELECT street, protected, safetyrating, width_feet
FROM citybikelanes
WHERE protected = 'no'
AND width_feet < 4

UNION

SELECT street, protected, safetyrating, width_feet
FROM citybikelanes
WHERE protected = 'no'
AND width_feet >= 4
ORDER BY street,width_feet;

--The above query reveals the lanes with the lowest scores 1) have no protection from motor vehicle traffic and 2) are located on narrower streets (< 4')







