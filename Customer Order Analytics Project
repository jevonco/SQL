This SQL code queries an H-1 sales database for an electronic device retailer. In the analysis, I use aggregate functions, JOINs, and GROUP BY/HAVING. 

1./*What were the total sales for January*/
SELECT COUNT(*)
FROM bit_db.jansales
WHERE LENGTH(orderid) = 6
AND orderid != 'Order ID'; 

2./*How many iPhone sales were there in January?*/
SELECT COUNT(*)
FROM bit_db.jansales
WHERE product 
LIKE 'iPhone'
AND LENGTH(orderid) = 6
AND orderid != 'Order ID';

3./* Which account holders placed orders in February?/*
SELECT DISTINCT(acctnum), orderid
FROM bit_db.febsales feb
INNER JOIN bit_db.customers customer
ON feb.orderid = customer.order_id
WHERE LENGTH(orderid) = 6
AND orderid != 'Order ID';

4. /*Which product sold at the lowest price in January? How much was it?*/
SELECT MIN(price) AS lowest_cost_product,product
FROM bit_db.jansales; 

5. /*What was the total revenue for each product sold in January?*/
SELECT SUM(quantity)*price AS revenue 
FROM bit_db.jansales
GROUP by product; 

6./*Which products were sold in February at 548 Lincoln Street, Seattle, WA 98101, how many were soldm and what was the total revenue?*/
SELECT product, SUM(quantity), SUM(quantity)*price AS revenue
FROM bit_db.febsales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product; 

7./*How many customers ordered more than one product at a time in February, what was the average amount spent for those customers?*/
SELECT COUNT(DISTINCT(acctnum)) AS number_of_customers, AVG(quantity*price) AS avgspent
FROM bit_db.customers c
LEFT JOIN bit_db.febsales f
ON c.order_id = f.orderid
WHERE quantity > 2
AND LENGTH(orderid) = 6
AND orderid != 'Order ID';  

8./*How many units of each product were sold in February, what was the total revenue for each product?*/
SELECT 
    DISTINCT(product) AS product, 
    COUNT(quantity) AS totalsold, 
    ROUND(SUM(price*quantity),2) AS total_product_revenue
FROM bit_db.febsales
WHERE LENGTH(orderid) = 6
AND orderid != 'Order ID'
GROUP BY product;

9. /*Which locations in New York received at least 3 orders in January, and how many orders did they each receive?*/

SELECT DISTINCT(location), COUNT(*)
FROM bit_db.jansales
WHERE location LIKE '%new york%'
AND LENGTH(orderid) = 6
AND orderid != 'Order ID'
GROUP BY location 
HAVING COUNT(*) >= 3;

10. /*How many of each type of headphone were sold in February?*/
SELECT sum(Quantity) as quantity,
Product
FROM BIT_DB.FebSales 
WHERE Product like '%Headphones%'
GROUP BY Product; 

11. SELECT product, SUM(quantity) AS unitsold
FROM bit_db.febsales
WHERE product LIKE '%headphone%'
AND LENGTH(orderid) = 6
AND orderid != 'Order ID'
GROUP BY product; 

12. /*What was the average amount spent per account in February?*/
SELECT acctnum,AVG(quantity*price) AS avgspent
FROM bit_db.febsales f
JOIN bit_db.customers c
ON f.orderid = c.order_id
WHERE LENGTH(orderid) = 6
AND orderid != 'Order ID'
GROUP BY acctnum;

13. /*What was the average quantity of products purchased per account in February?*/

SELECT acctnum,SUM(quantity)/COUNT(quantity) AS avg_items
FROM bit_db.febsales f
JOIN bit_db.customers c
ON f.orderid = c.order_id
WHERE LENGTH(orderid) = 6
AND orderid != 'Order ID'
GROUP BY acctnum;
